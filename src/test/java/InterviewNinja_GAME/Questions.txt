[SS] 1. Tell me about yourself? (5 min.) - Solution: Varies from person to person. Your response should include the following: - How many years of experience in the IT industry  - What is your current position?  - Name of the current employer and a little bit of background information  - Mention your knowledge (briefly) on: 1. Agile methodology, 2. Technical skills and 3. Soft Skills
[SS] 2. What skills and qualities are needed to become a SDET? (3 min.) - Solution: 1. Communication Skill (verbal and written), 2. Time Management & Organization Skills, 3. Great Attitude and 4. Passion
[SS] 3. What are your strengths and your weaknesses? (3 min.) - Solution: Varies from person to person. Try to have 3 good strengths with examples ready. Your weaknesses should be positive. Nothing that could put into question your capabilities and interaction with the team.
[SS] 4. What is your biggest accomplishment? (5 min.) - Solution: Varies from person to person. Try to map your achievements to the job description and build the answer around it. 1. Highlight if you have achievements in Process improvement. 2. If you have fixed any team members problems such as people issues. 3. Highlight If you have developed/implemented any automation frameworks or if you have provided contribution in bringing up the test coverage to maximum level. 4.Highlight if you have implemented any test design techniques especially to increase the test coverage. 5. Highlight if you have contributed anything out of your team. 6.Did you ever receive appreciations from Customer for providing quality products with zero or minimum bugs. 7.Are you part of a local testing groups, Test talks and contributing to a level people learn something from you. Do not hesitate to highlight it.
[SS] 5. Where do you see yourself in five years' time? (3 min.) - Solution: The interviewer wants to understand more about your career goals and how this position would fit into your grand plan. They care about your career goals because they want to hire someone who is motivated, proactive, and likely to stick around and work hard if hired.
[SS] 6. Why should we hire you? (3 min.) - Solution: This is your chance to wow them with your highlight reel. Your answer should summarize the top three or four best reasons to hire you. It’s better to have three or four strong reasons with memorable descriptions and/or examples than to rattle off a laundry list of twelve strengths without context. This is an opportunity to reiterate your most impressive strengths and/or describe your most memorable selling points, tailored to align with the top requirements in the job description.
[SS] 7. Why do you want to work for our company as a SDET? (3 min.) - Solution: Here’s what they want to see in your response: 1. Enthusiasm about the position and company. 2. Values that align with the organization’s culture. 3. Evidence that you’ve researched the company and understand their purpose. 4. Authenticity and substance—you want to avoid vague answers, like “I want to be challenged and grow professionally.” The ideal answer will address all these points and reinforce the idea that you’re uniquely qualified for the position. Although it might seem counterintuitive, interview questions are almost never about you as an individual—they’re about what you can do for the employer. So at every opportunity, try to frame your responses to highlight your capabilities.
[SS] 8. How would you deal with a member of your team who disagreed with the work you carried out as an SDET? (3 min.) - Solution: 1. Pick a relevant example 2. Emphasize communication 3. Discuss the steps you took 4. Be honest 5. Emphasize the results
[SS] 9. Tell me a time when you worked as part of a team to solve a complex task (5 min.) - Solution: Employers want to see you focus on the question at hand. They ask "Tell me about a time you worked on a team" to make sure you aren't selfish or hard to get along with. A good answer shows you can work with others towards a common goal, which is an essential skill no matter where you work. Prepare your answer before the interview using the STAR method. STAR stands for Situation, Task, Action and Result.
[SS] 10. Do you have any questions for me? Ask 3. (2 min.) - Solution: Your questions should make it clear that you were engaged during the interview and have quickly gained a sense of the company's goals and priorities. You can reflect back to earlier moments in the interview or build off of news within the company or its market. Questions categories: 1. About the Role 2. About the Company or Interviewer 3. About you
[SS] 11. Describe your current role (5 min.) - Solution: 1. Remember the responsibilities listed in your resume 2. Connect your responsibilities to the ones in the job posting 3. Use details when explaining your larger and important projects 4. Describe how you use your skills to benefit the company
[SS] 12. Describe your daily activities (5 min.) - Solution: Hint--> how do you start your day, daily meetings,duties,
[SS] 13. Tell me about your project (5 min.) - Solution:  Hint--> a quick intro to the project w/o going onto the details, mention what is the target auditory is and what part of it you are working on.
[SS] 14. What do you like the most about testing? (2 min.) - Solution: 1. I love solving logical puzzles 2. I love helping others 3. I love to be challenged 4. I love to be in a team where  is all about delivering quality products.
[SS] 15. Can you explain SDLC? (5 min.) - Solution: The Software Development Life Cycle (SDLC) refers to a methodology with clearly defined processes for creating high-quality software. in detail, the SDLC methodology focuses on the following phases of software development: 1. Requirement analysis 2. Planning 3. Software design such as architectural design 4. Software development 5. Testing 6. Deployment 7. Maintenance
[SS] 16. How would you test a : vending machine/roller skates/tooth brush? (5 min.) - Solution:
[SS] 17. Why do we test? (2 min.) - Solution: The testing is important since it discovers defects/bugs before the delivery to the client, which guarantees the quality of the software. It makes the software more reliable and easy to use. Thoroughly tested software ensures reliable and high-performance software operation.
[SS] 18. Explain the Agile_Scrum ceremonies/meetings and the different roles (5 min.) - Solution:
[SS] 19. What is the testing hierarchy? (3 min.) - Solution: There are generally four recognized levels of testing: unit/component testing, integration testing, system testing, and acceptance testing. Tests are frequently grouped by where they are added in the software development process, or by the level of specificity of the test.
[SS] 20. What are the different type of testing and explain your favorite one. (3 min.) - Solution: 1. Unit/component testing 2. Integration testing 3. Regression testing 4. Smoke testing 5. Alpha Testing 6. Beta Testing 7. System Testing 8. Stress Testing 9. Performance Testing 10. Object-Oriented Testin
[Java] 21. What are the differences between a Constructor and a Method? (2 min.) - Solution: Constructor is used to initialize an object whereas method is used to exhibits functionality of an object. Constructors are invoked implicitly whereas methods are invoked explicitly. Constructor does not return any value where the method may/may not return a value. In case constructor is not present, a default constructor is provided by java compiler. In the case of a method, no default method is provided. Constructor should be of the same name as that of class. Method name should not be of the same name as that of class.
[Java] 22. What are the differences between Arrays and ArrayList in Java? (2 min.) - Solution: An array is basic functionality provided by Java. ArrayList is part of collection framework in Java. Therefore array members are accessed using [], while ArrayList has a set of methods to access elements and modify them. ArrayList size is dynamic, while Array size is fixed.
[TQ] 23. Can you explain how to reverse a String? (2 min.) - Solution: OH BOY. TECHNICAL ANSWER MAY VARY. Create a for loop that goes backwards(i--), find each character by using .charAt() then concat with String result from last to first within the loop.
[TQ] 24. Can you explain how to combine two arrays? (2 min.) - Solution: TECHNICAL ANSWER VARIES
[TQ] 25. Can you explain how to create a custom method that returns odd numbers? (technical question) (2 min.) - Solution: Take a number(num) as a parameter. if(num%2!=0){ return true;}
[GH] 26. What is GitHub? (2 min.) - Solution: GitHub is a code hosting platform for version control and collaboration. It lets you and others work together on projects from anywhere.
[GH] 27. What is a repository? (2 min.) - Solution: Its a "cloud" where the project can be stored and worked on. There is a local repository which is on the ground level, and then there is a remote repo(aka Origin) that is in the sky cloud on Github.com. We pull FROM the sky to the ground and push FROM the ground TO the sky.
[GH] 28. What are some Git commands? (2 min.) - Solution: Pull, Commit, Push, Fetch, Clone, Merge
[GH] 29. What is Remote & Local Repository? (2 min.) - Solution: Local repo is the repo on your local hard drive. The remote repo is literally a cloud that is connected to a server that connected to GitHub.com. THIS IS NOT A GREAT ANSWER.
[Jira] 30. How do you automate a Test Case from Jira? (3 min.) - Solution: User Story -> AC -> Test Case(Manual and/or Automated) -> Test Execution
[SS] 31. What is Boundary Value Analysis (BVA) (2 min.) - Solution: Boundary testing is the process of testing between extreme ends or boundaries between partitions of the input values. So these extreme ends like Start End, Lower  Upper, Maximum Minimum, Just Inside Just Outside values are called boundary values and the testing is called "boundary testing".
[Jira] 32. What is a bug and How do you create a bug ticket? (3 min.) - Solution: A bug is a defect found while doing a test execution. It can be reported through the comments of the specific step in the test execution or a Bug issue can be created on Jira linked to that specific step of the test execution
[SS] 33. What is a Test Case? (2 min.) - Solution: It is a document that explains the steps needed to manually or automatically test the Acceptance Criteria.
[Java] 34. Can you explain the different types of Access Modifiers? (3 min.) - Solution: Public(Global/Project Visibility), Protected(Package and Subclass Visibility), Default(Package Visibility), Private(Class Visibility)
[Java] 35. What does OOP stands for? (2 min.) - Solution: Object oriented programming
[Java] 36. What are the 4 principles of OOP? (2 min.) - Solution: Encapsulation, Inheritance, Abstraction, Polymorphism
[Java] 37. What is the concept of Encapsulation? (2 min.) - Solution: This is one of the concepts of OOP and it allows us to hide the name of the variable. We set the variables we want hidden to have a private AccessMod and then create getter() and setter() methods to set and retrieve the values of those private variables....but it doesnt mean we reveal what the variables actually stand for.
[Java] 38. What is the concept of Inheritance? (2 min.) - Solution: Inheritance is one of the concepts of OOP and it is a "relationship" between classes. When a class inherits another class it is saying it has an "IS A" relationship with that class(Superclass to Subclass / Parent to Child). It is the fastest way to make a class rich. If you want to invoke the methods or variables of the SuperClass then you have to use the keyword |super.| or |super()| as opposed to |this.| or |this()|. Syntax: public class Honda extends Car{.
[Selenium] 39. What is Selenium and how does it works? (3 min.) - Solution:  Selenium is an open source java library to automate web applications. Primarily it is for automating web applications for testing purposes, SELENIUM AUTOMATES BROWSERS...THAT'S IT! Helps us drive a browser they way we want to drive it.
[Selenium] 40. What does pom.xml stand for and what do we do with thi file? (2 min.) - Solution: pom --> Project Object Model. xml --> extensible mark up language. It is the fundamental unit of work in Maven. It is an XML file that contains information about the project and configuration details used by Maven to build the project. It contains default values for most projects. Like the test directory which is: src->test->java. When executing a task or goal, Maven looks for the POM in the current directory. It reads the POM, gets the needed config. info, then executes the goal.
[Selenium] 41. What is build? (1 min.) - Solution: Repeating steps when creating a project, such as: creating, adding, compiling, testing, deploying. ALL OF THIS TOGETHER CALLED BUILD.
[Selenium] 42. Can you mention the differences between maven & selenium? (3 min.) - Solution: Maven is a Build automation tool for java projects and Selenium is a collection of libraries
[Selenium] 43. What is a WebDriver? (2 min.) - Solution: It is a subclass of selenium libraries/superClass that allows us to open a browser by creating a new webDriver object (usually named Driver)
[Selenium] 44. What is the folder structure when creating a project in maven? (2 min.) - Solution: SRC --> Test --> Java --> Company --> ToYourCustomDirectory
[Selenium] 45. What is XPath in Selenium? (2 min.) - Solution: XPath in Selenium is an XML path used for navigation through the HTML structure of the page. It is a syntax or language for finding any element on a web page using XML path expression. XPath can be used for both HTML and XML documents to find the location of any element on a webpage using HTML DOM structure
[Java] 46. What is the difference between Default AccessMod and Protected AccessMod? (1 min.) - Solution: Protected can be visible in subClasses and anywhere in the package. Default can only be visible in the same package and NOT in subclasses.
[Selenium] 47. How many different types of XPATh locators are there? (1 min.) - Solution: There are 2 types of xpath locators, absolute (/) and relative (//)
[Java] 48. What is the difference between checked and unchecked Exception? (2 min.) - Solution: Checked  exceptions that are checked at compile time. Unchecked exceptions that are not checked at compile time.
[Selenium] 49. What are the advantages and disadvantages of Selenium? (3 min.) - Solution: 1. Selenium is open source and free to use without any licensing cost. 2. It supports multiple programming languages 3. It supports multi-browser testing 4. It has a good amount of resources and helping community 5. It supports many operating systems 6. Interact with the web application. Disadvantages: 1. Selenium supports only web-based applications 2. It doesn't have built-in reporting tool 3. Cannot work with graphics, captchas, barcodes, shape. 4. It doesn't support file upload facility
[Selenium] 50. What is Selenium tool set? (2 min.) - Solution: 1. Selenium IDE: Implemented as a Chrome and Firefox extension, and allows you to record, edit, and debug test 2. Selenium Remote Control: to write automated web application UI tests in any programming language 3. Selenium WebDriver: execute your tests against different browser  4. Selenium GRID: runs your tests on different machines against different browsers in parallel
[Selenium] 51. What it's the difference between Implicit Wait Vs Explicit Wait? (2 min.) - Solution: An explicit wait makes WebDriver wait for a certain condition to occur before proceeding further with execution. An implicit wait makes WebDriver poll the DOM for a certain amount of time when trying to locate an element, before throwing "NoSuchElement Exception"
[Selenium] 52. What are various ways of locating an element in Selenium? (2 min.) - Solution: By using any of the Selenium locators: Id, name, className, xpath, cass, linkText, partialLinkText, tagName
[Selenium] 53. Reason why you would not be able to locate an element. (2 min.) - Solution: Locator changed, there is and iframe, Waiting time (page is loading slowly or Element is dynamic), page is not fully loaded/opened, page changes and that element doesn't exist anymore
[Selenium] 54. What is Absolute and Relative xpath? (2 min.) - Solution: Absolute Xpath (starts with single (/): It uses Complete path from the Root Element to the desire element. Relative Xpath (starts with double (//): You can simply start by referencing the element you want and go from there. Relative Xpath are always preferred as they are not the complete paths from the root element.
[Selenium] 55. How can we move to parent element using xpath? (2 min.) - Solution: Using (..) expression in xpath, we can move to parent element
[Selenium] 56. Mention 4 exceptions in Selenium and how to handle them (5 min.) - Solution: Though there are many Exception classes under WebDriverException, we commonly see these: NoSuchElementException, NoSuchWindowException, NoSuchFrameException, NoAlertPresentException, InvalidSelectorException, ElementNotVisibleException, ElementNotSelectableException,TimeoutException, NoSuchSessionException, StaleElementReferenceException
[Java] 57. Mention 4 exceptions in Java and how to handle them (5 min.) - Solution: NullPointerException, ArrayIndexOutOfBoundsException, ClassCastException, IllegalArgumentException, IllegalStateException.
[GH] 58. What is the gitignore file? (2 min.) - Solution: gitignore file is a text file that tells Git which files or folders to ignore in a project. A local . gitignore file is usually placed in the root directory of a project. ... Each new line should list an additional file or folder that you want Git to ignore. The entries in this file can also follow a matching pattern.
[Jira] 59. Where do you  get your test data? (2 min.) - Solution: BA provides, dummy data websites (generated in excel), java faker and developers provide from database
[Jira] 60. How do you test login functionality? (5 min.) - Solution: 1.check whether the login works with correct credentials. 2.check that it doesn't work with wrong credentials. 3.check text field limits - whether the browser accepts more than the allowed database limits. 4.check whether password text is hidden.
[Selenium] 61. Differences between driver.close and driver.quit command (2 min.) - Solution: driver.close() is used to close the current browser. driver.quit() is used to close all the browser instances
[Selenium] 62. How can we move to the nth child element using xpath? (2 min.) - Solution: There are two ways: 1. Using square brackets with index position, like div[2] will find the second div element. 2. Using position() method like dive[position()=2] will find the second div element
[Java] 63. What is an Exception and exception handling? (3 min.) - Solution: Exceptions are events due to which java program ends abruptly without giving expected output. Java provides a framework where a user can handle exceptions. The process of handling Exceptions is called Exception Handling. Exceptions need to be handled because they break the normal flow of execution of a program. One of the important intentions of exception handling is to prevent this break and continue program execution. Sometimes, you might want to perform some series of actions on occurring of a certain exception.
[Java] 64. Mention the class hierarchy of exception and error. (3 min.) - Solution: #1) Checked Exception: Checked exception is handled during compile time and it gives the compilation error if it is not caught and handled during compile time. #2) Unchecked Exception: In case of the unchecked exception, a compiler does not mandate to handle. The compiler ignores during compile time. #3) Error: When a scenario is fatal and the program cannot recover then JVM throws an error. Errors cannot be handled by the try-catch block. Even if the user tries to handle the error by using Try catch block, it cannot recover from the error.
[Java] 65. How do you handle an exception? (3 min.) - Solution:  Try and Catch block: try-catch blocks are generally used to handle exceptions. Type of exceptions is declared in catch block which is expected to come. When an exception comes in try block, immediately control moves to catch block.  throws Exception: throws keyword in java is used to throw an exception rather than handling it. All checked exceptions can be thrown by methods.  finally block: finally, block executes irrespective of execution of try-catch block and it executes immediately after try/catch block completes. Throwable: Throwable is a parent class for error and exception. Generally, it is difficult to handle errors in java. If a programmer is not sure about the type of error and exception, then it is advised to use the Throwable class which can catch both error and exception.
[SS] 66. What is 508 testing? (2 min.) - Solution: Testing for the hearing, vision disability users
[SS] 67. How many environments are there? (1 min.) - Solution: It depends on the company, and their amount may very, but in general there are mainly used: development, stage and production
[SS] 68. Which part of the regression test should be automated? (3 min.) - Solution: tests which are stable,  repeated frequently, simple and required no tester input  are good candidates for automation (edited)
[Java] 69. What is the abstract concept in OOP and why do we use it? Give one example please (2 min.) - Solution: Abstract classes help us organize what all the subclasses SHOULD have/do
[Java] 70. What is the difference between Interface and Abstraction? How are each created? What methods cannot be abstract/interfaced? (3 min.) - Solution:
[Java] 71. What is the difference between Process and Thread? (2 min.) - Solution:A process is a self contained execution environment and it can be seen as a program or application whereas Thread is a single task of execution within the process. Java runtime environment runs as a single process which contains different classes and programs as processes. Thread can be called lightweight process. Thread requires less resources to create and exists in the process, thread shares the process resources.
[TQ] 72. Write/describe your logic how you would create a return method that can remove the duplicated values from String. (2 min.) - Solution:
[TQ] 73. Write/describe your logic how you would create a return  method that can find the unique characters from the String. (2 min.) - Solution:
[TQ] 74. Write/describe your logic how you would create a return method that check if a string is build out of the same letters as another string. (2 min.) - Solution:
[TQ] 75. Write/describe your logic how you would create a return method that can find the frequency of characters. (2 min.) - Solution:
[TQ] 76. Write/describe your logic how you would create a method that can return the sum of the digits in a string. (2 min.) - Solution:
[Java] 77. What is Java Garbage Collector? (2 min.) - Solution:
[TQ] 78. Write/describe your logic how you would create a method that can find the minimum number from an int Array. (2 min.) - Solution:
[TQ] 79. Write/describe your logic how you would create a return method that can concat two arrays. (2 min.) - Solution:
[TQ] 80. Write/describe your logic how you would create a method which can identifies given number is even or odd.  (2 min.) - Solution:
[TQ] 81. Write/describe your logic how you would create a method which prints out the numbers from 1 to 30 but for numbers which are a multiple of 3, print "FIN" instead of the number and for numbers which are a multiple of 5, print "RA" instead of the number. for numbers which are a multiple of both 3 and 5, print "FINRA" instead of the number. (2 min.) - Solution:
[TQ] 82. Write/describe your logic how you would create a method that can divide two numbers without using division operator. (2 min.) - Solution:
[TQ] 83. Write/describe your logic how you would swap two variable' values without using a third variable. (2 min.) - Solution:
[TQ] 84. Write a return method that returns the factorial number of any given number. (2 min.) - Solution:
[TQ] 85. Write/describe your logic how you would create a method that can check if a number is prime or not. (2 min.) - Solution:
[TQ] 86. Write/describe your logic how you would create a return method that returns the  Fibonacci of any given number. (2 min.) - Solution:
[TQ] 87. Given a list of fruit names: "Apple", "Pear", "Pomegranate", "Apple". Write/describe your logic how you would create  a java operation to remove all the names Apple. (2 min.) - Solution:
[Java] 88. Can we override the static methods? (2 min.) - Solution: No, we can not override static methods. If a static method is created with a similar method signature as a method being passed down by inheritance this will be method hiding, not  overriding.
[Java] 89. Can we execute a program without main() method? (2 min.) - Solution: Yes, one of the ways to execute the program without the main method is using static block. Also, in testing we use other approaches such as the Test annotations to run the code.
[Java] 90. What is difference between stack and heap? (2 min.) - Solution: Both are used for memory but have different purposes. Stack: Stores primitives, method calls, and references; Heap: Stores the objects themselves. The String pool is also in the heap.
[Java] 91. What are Wrapper classes? (2 min.) - Solution: Wrapper classes are object representations of primitive data types. These classes are needed to be able to store primitive like data in collections such as ArrayList. These wrapper classes also have useful utility methods.
[SS] 92. What did you talk about in your last retro meeting? Give an Example Please... (5 min.) - Solution: What went well during the last sprint / What didn't go well during the last sprint / How can we improve for the next sprint
[SS] 93. Have you worked under pressure? (3 min.) - Solution: Hint--> Give an example of how you succeeded working under the pressure, close to the deadline for instance
[SS] 94. Where do you see yourself 5 years from now? (2 min.) - Solution: Hint--> it is always good to show your intentions with the company that is hiring you and give them a strong feeling that you are willing to stay with them and grow
[SS] 95. Why did you choose software quality analyst as a profession/ career? (3 min.) - Solution:
[SS] 96. Why should we hire you? (5 min.) - Solution: Hint--> mention your qualities, your skills and skills that SDET should have in order to succeed.
[SS] 97. What is smoke testing? (3 min.) - Solution: Smoke testing is a confirmation for QA team to proceed with further software testing. It consists of a minimal set of tests run on each build to test software functionalities. Smoke testing is also known as "Build Verification Testing" or “Confidence Testing.”
[SS] 98. What is parking lot? (2 min.) - Solution: Informal meeting, off topic with a specific team member
[SS] 99. What is the difference between system testing and integration testing? (3 min.) - Solution: System testing is a level of testing where the application as a whole is tested for its compliance to functional and non-functional requirements. Whereas, in integration testing, we test the interfacing between the modules which are interconnected with each other.
[SS] 100. What is a negative test case? (3 min.) - Solution: Negative testing is a method of testing an application or system that ensures that the plot of the application is according to the requirements and can handle the unwanted input and user behavior. Invalid data is inserted to compare the output against the given input.
[SS] 101. What are the roles and responsibilities of a tester or a QA engineer? (3 min.) - Solution:
[SS] 102. What constitutes a test case? (3 min.) - Solution: In software engineering, a test case is a specification of the inputs, execution conditions, testing procedure, and expected results that define a single test to be executed to achieve a particular software testing objective, such as to exercise a particular program path or to verify compliance with a specific requirement.
[Selenium] 103. How do you locate dynamic web element? (3 min.) - Solution: 1.Absolute Path method. This is the easiest way to solve the issue. 2.Use Relative XPath using contains or starts with text.3.Identify by index. 4.Use Multiple attributes to locate an element.
[Selenium] 104. How to go parent and child using xpath?  (1 min.) - Solution: --> To go to child: use "/" to go one of the direct childs. --> To go to parent: use "/.." this will take us to the parent web element
[SS] 105. Where do you get your test data from? (2 min.) - Solution: if the data is not provided in the documentation, you can get data from the internet or use Faker.
[Selenium] 106. How do you switch between browser's tabs using Selenium? (3 min.) - Solution:
[Selenium] 107. What dependencies do you use in your framework? (5 min.) - Solution:
[Selenium] 108. What is Selenium Web driver as you mentioned it in your resume? (3 min.) - Solution:
[Selenium] 109. What is TestNG annotations and why we use them? (3 min.) - Solution: TestNG is a UNIT TESTING TOOL. Originally created by a developer for developers. As SDET we use it to create certain test flow with its annotations such as: - BeforeMethod, AfterMethod, BeforeClass, AfterClass... - @Test annotation helps us create TestNG tests where we can implement Java+Selenium code and use Assertions coming from TestNG.
[Java] 110. What is super keyword in java? (1 min.) - Solution:
[Java] 111. What is an object? (1 min.) - Solution: Object is an instance of a class
[Java] 112. What is class in java? (1 min.) - Solution: Class is like an object constructor, ir a "blueprint" for creating objects
[GH] 113. What is pull request? (2 min.) - Solution: Pull requests let you tell others about changes you've pushed to a branch in a repository on GitHub. Once a pull request is opened, you can discuss and review the potential changes with collaborators and add follow up commits before your changes are merged into the base branch.
[GH] 114. What is a conflict in Git/Git Hub? (3 min.) - Solution: A conflict arises when two separate branches have made edits to the same line in a file, or when a file has been deleted in one branch but edited in the other. Conflicts will most likely happen when working in a team environment. There are many tools to help resolve merge conflicts.
[GH] 115. How can you resolve a conflict in Git Hub? (3 min.) - Solution: 1. Under your repository name, click "Pull requests" 2. In the "Pull Requests" list, click the pull request with a merge conflict that you'd like to resolve 3. Near the bottom of your pull request, click "Resolve conflicts" 4. Decide if you want to keep only your branch's changes, keep only the other branch's changes, or make a brand new change, which may incorporate changes from both branches 5. If you have more than one merge conflict in your file, scroll down to the next set of conflict markers and repeat steps four and five to resolve your merge conflict 6. Once you've resolved all your merge conflicts, click "Commit merge". This merges the entire base branch into your head branch
[GH] 116. What is Git and why it is used? (3 min.) - Solution: Git is the most commonly used version control system. Git tracks the changes you make to files, so you have a record of what has been done, and you can revert to specific versions should you ever need to. Git also makes collaboration easier, allowing changes by multiple people to all be merged into one source.
[GH] 117. What is fetch? (2 min.) - Solution: Fetch gets the latest updates from origin but doesn't update your local working copy with the changes. After you click Fetch origin, the button changes to Pull Origin. Click Pull Origin to update your local working copy with the fetched updates.
[GH] 118. What is a branch? (2 min.) - Solution: A branch is essentially is a unique set of code changes with a unique name. Each repository can have one or more branches. The main branch is the one where all changes eventually get merged back into, and is called master.
[GH] 119. What is fork and clone in git? (2 min.) - Solution: When you fork a repository, you create a copy of the original repository (upstream repository) but the repository remains on your GitHub account. Whereas, when you clone a repository, the repository is copied on to your local machine with the help of Git.
[SS] 120. How do you choose automated testing over manual testing? (3 min.) - Solution:
[SS] 121. Can you explain the advantages and disadvantages of automation? (3 min.) - Solution:
[GH] 122. What are the benefits of using Version Control System? (3 min.) - Solution: 1. With the Version Control System(VCS), all the team members are allowed to work freely on any file at any time. VCS gives you the flexibility to merge all the changes into a common version. 2. All the previous versions and variants are neatly packed up inside the VCS. You can request any version at any time as per your requirement and you’ll have a snapshot of the complete project right at hand. 3. Whenever you save a new version of your project, your VCS requires you to provide a short description of the changes that you have made. Additionally, you can see what changes are made in the file’s content. This helps you to know what changes have been made in the project and by whom. 4. A distributed VCS like Git allows all the team members to have a complete history of the project so if there is a breakdown in the central server you can use any of your teammate’s local Git repository.
[GH] 123. How do you revert a commit that has already been pushed and made public? (2 min.) - Solution: 1. Remove or fix the bad file in a new commit and then push it to the remote repository. This is the most obvious way to fix an error. Once you have made necessary changes to the file, then commit it to the remote repository 2.Also, you can create a new commit that undoes all changes that were made in the bad commit. To do this use the command
[GH] 124. What is staging area or index? (2 min.) - Solution: That before completing the commits, it can be formatted and reviewed in an intermediate area known as ‘Staging Area’ or ‘Index’.
[GH] 125. Describe the branching strategies you have used. (3 min.) - Solution: In the end tell them that branching strategies vary from one organization to another so I know basic branching operations like delete, merge, checking out a branch, etc.  1. Feature branching: A feature branch model keeps all of the changes for a particular feature inside of a branch. When the feature is fully tested and validated by automated tests, the branch is then merged into master. 2. Task branching: In this model, each task is implemented on its own branch with the task key included in the branch name. It is easy to see which code implements which task, just look for the task key in the branch name. 3. Release branching: Once the develop branch has acquired enough features for a release, you can clone that branch to form a Release branch. Creating this branch starts the next release cycle, so no new features can be added after this point, only bug fixes, documentation generation, and other release-oriented tasks should go in this branch. Once it is ready to ship, the release gets merged into master and tagged with a version number. In addition, it should be merged back into the develop branch, which may have progressed since the release was initiated.
[GH] 126. What is HEAD? (1 min.) - Solution: HEAD is used to refer to the last commit in the currently checked-out branch.
[GH] 127. What is the difference between rebasing and merge in Git? (2 min.) - Solution: In Git, the rebase command is used to integrate changes from one branch into another. It is an alternative to the “merge” command. The difference between rebasing and merge is that rebase rewrites the commit history in order to produce a straight, linear succession of commits. Merging is Git’s way of putting a forked history back together again. The git merge command helps you take the independent lines of development created by git branch and integrate them into a single branch.
[Java] 128. What kind of class can not have a "child"? (1 min.) - Solution: Final
[SS] 129. Why us ? why are you applying our company? (2 min.) - Solution:
[Java] 130. How to call one constructor from the other constructor? (2 min.) - Solution:
[Jira] 131. What is product backlog? (2 min.) - Solution: A product backlog is a prioritized list of work for the development team that is derived from the roadmap and its requirements.
[SS] 132. What is static testing? (2 min.) - Solution: Static Testing is a software testing technique which is used to check defects in software application without executing the code.
[SS] 133. What is dynamic testing? (2 min.) - Solution: Is a term used in software engineering to describe the testing of the dynamic behavior of code.
[SS] 134. What is integration testing and who does that? What environment it runs in your company?  (2 min.) - Solution:
[Selenium] 135. What is a WebElement?  (1 min.) - Solution: Whatever we see on the HTML page such as: buttons, links, images etc.
[Selenium] 136.What are the differences between getText method and getAttribute method? (2 min.) - Solution: getText - Return type: String - It does not accept argument - it only returns the text of given WebElement as a String - Looks in between the opening tag and closing tag. - getAttribute("attribute") - Return type: String - It does accept argument - We pass the name of attribute that we want to get value of as argument. - It returns the value of given attribute as a String. - Looks inside of the OPENING TAG ONLY.
[Selenium] 137. What is your locator approach? (3 min.) - Solution: 1- If there is id attribute, I would use it. (make sure it is not dynamic) 2- If there is class, I would quickly check if it is unique or not. 3- If it is a link, I would use linkText locator. 4- If none of the above, I would go for XPATH.
[Selenium] 138. Why do we use maven? (2 min.) - Solution: - Maven helps us create and manage java projects easily. - When project is created with maven, it comes with certain folder structure, and pom.xml file.
[Selenium] 139. Differences between findElement method  and findElements method (2 min.) - Solution: --> findElement (); - Finds and returns a single web element - What is the return type: - WebElement - What happens if it does not find a web element? - if not found, findElement() throws NoSuchElementException. --> findElements();- Finds and returns multiple web elements. - It returns List of WebElements - It It will return empty List if it doesnt find anything
[Selenium] 140. How many different types of dropdown are there and how do we know which one is what? (2 min.) - Solution: 1- HTML Dropdown 2- Select Dropdown. - We inspect. - If it is created using <select> tag it means Select dropdown. If not, it is HTML dropdown.
[Selenium] 141. How do we handle HTML dropdowns? (1 min.) - Solution: - Just as any other web element, by locating with any of the 8 locators. - Then we click.
[Selenium] 142. How do we handle Select dropdowns? (1 min.) - Solution: - We need to create an object of Select class. syntax: Select select = new Select(Driver.getDriver().findElement(By.id("something")));
[Selenium] 143. How many different ways of selecting from a dropdown? (1 min.) - Solution: - 3 different ways - byIndex(1) - byVisibleText and - byValue("value"). Note: Indexes start from 0. If we use index we should consider this.
[Selenium] 144. How do we get the currently selected option in a SELECT dropdown? (1 min.) - Solution: - .getFirstSelectedOption(); - This method will return the currently selected option as WebElement
[Selenium] 145. How to get all options from select dropdown? (1 min.) - Solution: - .getAllOptions(); - This method will return all of the existing options in the given SELECT dropdown - Return type: List of WebElements
[Selenium] 146. How many different types of alerts are there and how do you handle them? (2 min.) - Solution: - 2 types of alerts. #1- HTML Alerts: - HTML Alerts are handle by locating and clicking just like any other web element. #2- JavaScript Alerts, which has 3 types: - Warning/Information: - You can only accept this type of alert. - Confirmation - We can accept or dismiss. 	- Prompt - We can accept, dismiss, OR sendKeys. - We handle JS Alerts using Alert. syntax: Alert alert = driver.switchTo().alert(); alert.accept(); alert.dismiss(); alert.sendKeys("we can enter text here");
[Selenium] 147. What is iframe and how many different ways of switching to an iframe? (2 min.) - Solution: - HTML inside of another HTML and we have to switch to inner iframe because by default, selenium webdriver is focusing on the main HTML page. - If we need to do any action in inner <html> we need to explicitly switch to it. 	syntax: 	driver.switchTo().frame();  different ways of switching to an iframe? 1- Index: we can pass int 2- id or name 3- WebElement
[Selenium] 148. What is the difference between window and a tab from selenium's perspective? (1 min.) - Solution: - For Selenium, they are all same.
[Selenium] 149. What is a window handle and how do you handle it? (2 min.) - Solution: - It is a randomly generated alphanumerical values that are unique to each window that is created by selenium. - We handle window using "windowHandles". - driver.getWindowHandle(); - This will return us the handle of the current window. - return type: String
[Selenium] 150. What kind of data properties file store? (1 min.) - Solution: key=value
[Selenium] 151. Why are we reading value from .properties file? (1 min.) - Solution: We are trying to avoid hard coding important test data in our source code - Easy to change the flow of running tests when reading from external file - such as; if we want to run on different browser, different environment(url), different usernames etc, it can be easily achieved with this logic.
[Selenium] 152. What is the different between data driven testing, cross-browser testing and parallel testing? (2 min.) - Solution: - Data driven: Running same tests against different test data. Cross-Browser testing:  Running same tests against different browsers and Parallel Testing: - Delegating the same tests(test suite) to different machines to achieve shorter testing duration
[Selenium] 153. What is Singleton Design Pattern and do you achieve it? (2 min.) - Solution: - Singleton Design Pattern is a software design pattern that restricts the initiation of class to a "single" object. - We use it for our Driver utility, so that we can always get the same driver instance everytime we call it. how to achieve it? 	- it constrains/limits initialization of class to single instance - a pattern we use  to make sure create only one object of the class
[Selenium] 154. Why do you want to get same driver instance all the time? (Singleton Design Pattern) (2 min.) - Solution: - When creating tests in different classes with different packages, with different design patterns, with different logics implemented; we need to make we passing around the exact same driver instance so that our webdriver knows where to go.
[Selenium] 155. What is Actions class and How do we use actions? (2 min.) - Solution: - To perform "advanced" mouse and keyboard actions, such as: - double-click, - moveToElement : can be used to hover over, or use to scroll to a specific webElement:  contextClick(rightClick), dragAndDrop. - We must use perform() method to make sure actions are happening.  Actions actions = new Actions(Driver.getDriver()); actions.methodName(webElement).perform(); actions.moveToElement(someLink).perform();
[Selenium] 156. What is POM Design Pattern and do you implement it? (2 min.) - Solution: - Creating separate .java classes for the each page of the application. - In these classes we store relevant information to those specific pages. - Such as: web elements and methods. Implementation: 1- Create constructor and initialize Object of that class and WebDriver using PageFactory. --> After initializing we are able to use the web elements of the current class through the object of the current class. #2- Instead of using findElements(); we use @FindBy annotation - By using @FindBy annotation, we can still use all of the 8 locators that are coming from Selenium, just as we did with findElements() method.
[Selenium] 157. Why are we implementing POM Design Pattern? (2 min.) - Solution: - clean code / easy to read - less code - re-usable code / not repeatedly locating web elements throughout - easy to maintain / easy to manage - easy to collaborate with your team / KT Friendly - handles stale element exception by default
[Selenium] 158. What is synchronization and how can we achieve it? (2 min.) - Solution: - Browser and BrowserDriver moving at the same time. - We need to make sure that Selenium WebDriver (BrowserDriver) is always on the same page with our Browser. - Otherwise the code will break and we will get different types of exceptions. You can achieved it by: 1- Thread.sleep(); 2- ImplicitWait(); 3- WebDriverWait class, ExplicitWaits(); 4- FluentWait
[Selenium] 159. What is JavaScriptExecutor? (1 min.) - Solution: - It is just a simple interface coming from Selenium Library. - It has 2 methods that help us pass JavaScript functions in our Java+Selenium code.
[Selenium] 160. How do you implement JSExecutor? (1 min.) - Solution: we have to create instance of JSExecutor, than we downcast our WebDriver type to it.






